Integrantes

Eduardo Borgoño
201373525-8
Francisca Ramírez
201373607-6
---------------------
Tecnologías y versiones utilizadas

Java: openjdk version "1.8.0_191"
Gradle: gradle version 4.10.2

---------------------
Consideraciones

* El archivo JSON de pacientes tuvo una pequeña modificación para poder parsearlo
  de forma más sencilla. Los arreglos de "tratamientos/procedimientos", "examenes"
  y "medicamentos", el arreglo de cada uno contenpia dos objetos JSON el cual en legal
  versión modificada será solo un objeto JSON.
  Ejemplo
  - Versión anterior:
    ..."tratamientos/procedimientos":
      [{"asignados": ["quimioterapia"]}, {}"completados" :["cateter"]}],...

  - Versión nueva:
    ..."tratamientos/procedimientos":
        [{"asignados": ["quimioterapia"], "completados" :["cateter"]}],...

* Los procedimientos del archivo "requerimientos.json" deben cumplir la siguiente
  estructura:
    - String de tres palabras del tipo "accion tipo-procedimiento procedimiento",
      donde:

      > accion puede ser: asignar, completar, realizar, pedir, recetar o suministrar.
      > tipo-procedimiento puede ser: tratamiento, procedimiento, examen o medicamento.
      > procedimiento: cualquier nombre coherente a la acción que se está realizando

  Algunos ejemplos serían: "asignar tratamiento quimioterapia", "realizar procedimiento cateter",
  entre otros (ver json para más ejemplos).


---------------------
Intrucciones para ejecutar archivos

Todos los archivos .jar están dentro de la carpeta jars-tarea3
1- Ejecutar Handler-all.jar en todas las maquinas. Una vez hecho esto se pueden abrir los procesos de
doctores, enfermeros y paramedicos en todas las maquinas.
- Ejecutar con: java -jar Handler-all.jar

2- Ejecutar el resto de archivos de la misma forma.
- Ejecutar con: java -jar [Inserte nombre archivo].jar

3- Los archivos de logs, pacientes y funcionarios están en: ~/Tarea-3-Sistemas-Distribuidos/data

---------------------
Comparación de métodos

Se escogió el primer procedimiento:
  Se envıan los cambios al coordinador actual y este propaga a las replicas
  para mantener consistencia completa (consistencia secuencial).
En este procedimiento ocurre lo siguiente:
  - Número de mensajes: aumenta.
  - Latencia: aumenta
  - Consistencia: Se mantiene
Se priorizó mantener la consistencia, en consecuencia de aumentar el número de
mensajes y la latencia, esto debido al dominio de la tarea, en un hospital es de
suma importancia que todos los elementos del sistema mantengan información actualizada
de sus pacientes o podrían ocurrir graves errores.
